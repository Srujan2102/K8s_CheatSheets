19th Sep k8s deployment  --> practical
**************************************

same deployment file 
--> how to rollout eg: v1 -> v2 i.e, glass -> villa

--> how to rollback eg: v2 ->v1 i.e, villa -> glass

for this 
1. create eks cluster
2. deploy the manifestfile
3. kubectl rollout --help
4. kubectl set image command
5. check status 
6. rollback previous version

change cause in annotation --> for documentation

eg: 
	annotations:
Kubernetes.io/change-cause: "glass-application"

commands
********
kubectl get no 

powershell
**********
cd myk8s-replica
code .


git add .
git commit -m "update again"
git push --> it shows link

	   copy the link of pushed folder
 
In Eks cluster
**************
git clone paste the link myk8s-replica

cd myk8s-replica

ls --> shows the manifest files

kubectl apply -f . --> doesnot apply changes

kubectl create ns devnamespace

kubectl config set-context --current --namespace=devnamespace

kubectl apply -f . --> now apply the changes

kubectl get all --> shows all pods,service,deployment

		copy the endpoint in service and paste it in another tab so that we can see the glass application

kubectl rollout --help --> used to see commands

kubectl get deploy --> mycss is deployment name

kubectl rollout history deploy mycss --> here it shows revision as change-cause below it as glass-application
	

---->go to dockerhub and copy the villa image i.e, in our mycssimages repository


kubectl set image deploy mycss css-container=srujan2102/mycssimages:villa
	
kubectl rollout status deploy mycss 

kubectl get svc 
		copy the endpoint and paste it in another tab so that we can see the villa application

kubectl rollout undo deploy mycss 

kubectl rollout status deploy mycss 
	again it changes to glass application


---> Now we change endpoint to DNS for client purpose

eg: we are having a domain with /order and /payment for this we use the --> ingress
	www.flipkart.com/order
	www.flipkart.com/payment

glass-dep.yaml
**************

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mycss
  labels:
    env: prod
    app: web
  namespace: devnamespace
  annotations:
    kubernetes.io/change-cause: "glass-application"
spec:
  minReadySeconds: 6
  replicas: 3
  selector:
    matchLabels:
      app: my-css
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: my-css
      name: css-pod
    spec:
      containers:
        - name: css-container
          image: longflew/mycssimages:glass
          ports:
            - containerPort: 80
              protocol: TCP
          startupProbe:
            httpGet:
              path: /
              port: 80
          readinessProbe:
            httpGet:
              path: /
              port: 80
          livenessProbe:
            httpGet:
              path: /
              port: 80
          resources:
            requests:
              cpu: "500m" 
              memory: "1500Mi"  
            limits:
              cpu: "1800m"        
              memory: "7500Mi"

svc-glass.yml
*************

apiVersion: v1
kind: Service 
metadata: 
  name: svc-glass
spec: 
   type: LoadBalancer
   selector: 
     app: my-css
   ports: 
     - port: 80  
